{
    "root": true,
    "extends": [
        "standard-with-typescript",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-esling/recommended"
    ],
    "parserOptions": {
        "project": "./tsconfig.eslint.json"
    },
    "rules": {
        "indent": ["error", 2, { "SwitchCase": 1 }],
        "prefer-const": ["error"],
        "no-var": ["error"],
        "prefer-template": ["error"],
        "@typescript-eslint/return-await": ["error", "in-try-catch"],
        "@typescript-eslint/no-unused-vars": [ "warn", { "caughtErrors": "all" }],
        "@typescript-eslint/strict-boolean-expression": "off",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/prefer-nullish-coalescing": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-loss-of-precision": "off",
        "@typescript-eslint/no-throw-literal": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-var-requires": "off",
        "import/no-absolute-path": "off",
        "@typescript-eslint/ban-types": [  "error", { "extendDefaults": true, "types": { "{}": false } }],
        "eqeqeq": "off",
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "variable",
                "leadingUnderscore": "allow",
                "trailingUnderscore": "allow",
                "format": [
                    "camelCase",
                    "PascalCase"
                ]
            }
        ],
        "@typescript-eslint/no-misused-promises": [
            "error",
            {
                "chacksVoidReturn": false,
                "checkConditional": false
            }
        ]
    }
}